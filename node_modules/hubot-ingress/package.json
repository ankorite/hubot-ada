{
  "name": "hubot-ingress",
  "description": "Ingress commands for Hubot",
  "version": "0.14.0",
  "author": {
    "name": "Kevin Lanni",
    "email": "therealklanni@gmail.com",
    "url": "https://github.com/therealklanni"
  },
  "license": "MIT",
  "keywords": [
    "hubot",
    "hubot-scripts",
    "ingress"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/hubot-scripts/hubot-ingress.git"
  },
  "bugs": {
    "url": "https://github.com/hubot-scripts/hubot-ingress/issues"
  },
  "dependencies": {
    "coffee-script": "~1.6",
    "moment-timezone": "~0.3"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "sinon-chai": "*",
    "sinon": "*"
  },
  "main": "index.coffee",
  "scripts": {
    "test": "script/test"
  },
  "gitHead": "3a14f369c98273eb185452916a7f95dc166fd1b4",
  "readme": "# Ingress Hubot\n\nA collection of Ingress-related commands for Hubot. This script is designed\nspecifically for use with the Slack adapter.\n\n[![Build Status](https://travis-ci.org/hubot-scripts/hubot-ingress.svg)](https://travis-ci.org/hubot-scripts/hubot-ingress)\n\n## Features\n\n* Report level requirements\n* List requirements for all levels\n* Store badge information for players\n* Calculate recharge rate and max distance for AP level\n* Calculate septicycle/checkpoint times\n* *much more to come...*\n\n## Installation\n\n`npm install hubot-ingress`\n\nThen add `\"hubot-ingress\"` to `external-scripts.json`\n\nGo to the custom emojis page of your Slack team. Upload each of the images from\nthe `badges/` subfolder, naming them the same as their filename (without the\nextension).\nThese emoji will be used by Hubot.\n\n## Configuration\n\n`HUBOT_GOOGLE_GEOCODE_KEY` - An optional Google Geocoding API key.\nIf configured, this will be used by the \"intelmap\" feature in order to\nconvert an address to a lat/long for the intelmap link. The intelmap link\ngenerator should function without this, but it may be needed if the\nintelmap generator begins returing no results at some point.\n\nA Geocoding API key can be obtained easily from the [Google Developer Console](https://console.developers.google.com).\nAt the time of this writing, 2,500 requests/day are provided for free.\nCreate a new project for your hubot in the developer console, unless you\nhave one already. Enable \"Geocoding API\" under \"_APIs_\" and then\ncreate a new key under \"_Credentials_\".\n\n`HUBOT_CYCLE_TIME_FMT` - Optionally ovveride the display format for times (see\nMoment-timezone.js). Default is \"ddd hA\" (e.g. \"Sun 10pm\")\n\n`HUBOT_CYCLE_TZ_NAME` - Optionally set the timezone name (e.g. 'America/Chicago';\nsee [TZ name list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for names to use.).\nThis overrides `HUBOT_CYCLE_TZ_OFFSET` if both are set.\n\n`HUBOT_CYCLE_TZ_OFFSET` - Optionally set the timezone offset (e.g. '-05:00',\nsee [Moment.js](http://momentjs.com/docs/#/manipulating/timezone-offset/)).\nDefaults to the server instance's offset. This is used when\n`HUBOT_CYCLE_TZ_NAME` is not provided.\n\n### Slack\n\nIn order for the badge images to be seen on Slack, you must manually upload\neach one as an emoji with the appropriate name. Each image is conveniently\nnamed exactly how the emoji name should appear (leave off the .png of course).\n\nGo to <yourslackdomain>.slack.com/admin/emoji to configure emoji.\n\n## Commands\n\n### AP requirement\n\nReports the AP/badge requirements for the specified level.\n\n`hubot AP until L<level>`\n\n### List levels\n\nShow the AP/badge requirements for every level.\n\n`hubot AP all`\n\n### Add badges\n\nBadges can be added one by one or multiples at a time, and can be added for\nother players. Badges that have levels end with a number representing that\nlevel (1=bronze, 2=silver, etc). When a badge is added that is the same as an\nexisting badge (hacker5 vs hacker1, for example), then the new badge will\nreplace the existing badge.\n\n`hubot I have the hacker3, founder badges`\n\n`hubot user1 has the recursion badge`\n\n### Remove badges\n\nBadges can be removed one by one.\n\n`hubot I don't have the hacker1 badge`\n\n### Get Intel map\n\nGives you a link to the Ingress Intel map based on Google Maps search.\n\n`hubot intelmap soho ny`\n\n### Calculate max recharge distance\n\nCalculate maximum distance from which an agent can recharge, based on agent\nlevel.\n\n`hubot recharge distance [level]`\n\n### Calculate recharge rate/percentage\n\nCalculate recharge efficiency for an agent, based on agent level and distance.\n\n`hubot recharge rate [level] [distance]`\n\nNote: The distance parameter defaults to km, but it can also convert imperial\nunits, e.g. `hubot recharge rate 11 450 miles`\n\n### Get Septicycle times\n\nCalculate the next septicycle start. Optionally provide a number X to get the\nnext X start times.\n\n`hubot septicycle|cycle [count]`\n\n### Get Checkpoint times\n\nCalculate the next checkpoint start. Optionally provide a number X to get the\nnext X start times.\n\n`hubot checkpoint|cp [count]`\n\n### Get Timezone Offset\n\nReturns the current configured timezone offset.\n\n`hubot cycle offset`\n\n### Set Timezone Offset\n\nTemporarily sets the timezone offset. See [Moment.js](http://momentjs.com/docs/#/manipulating/timezone-offset/)\nfor how to configure this.\n\n`hubot cycle set offset [offset]`\n\n### Set Timezone Offset By Name\n\nTemporarily sets the timezone offset by name. See [TZ name list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\nfor names to use.\n\n`hubot cycle set offsetname [offset-name]`\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/hubot-scripts/hubot-ingress#readme",
  "_id": "hubot-ingress@0.14.0",
  "_shasum": "d3989569bb4e1865c80675d7b864cac8a4d49f7d",
  "_from": "hubot-scripts/hubot-ingress",
  "_resolved": "git://github.com/hubot-scripts/hubot-ingress.git#3a14f369c98273eb185452916a7f95dc166fd1b4"
}
